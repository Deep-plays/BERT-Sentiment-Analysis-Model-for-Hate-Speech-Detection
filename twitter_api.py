{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["IMPORTING TWEEPY AND CONFIGURATION THE AUTHENTICATION"],"metadata":{"id":"cTybAoPsYemJ"}},{"cell_type":"code","source":["pip install --upgrade tweepy"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Otrk67rgZIlg","executionInfo":{"status":"ok","timestamp":1684933263600,"user_tz":-330,"elapsed":5277,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}},"outputId":"2525ff8b-58cd-4d2a-c519-96cdf86ee01e"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: tweepy in /usr/local/lib/python3.10/dist-packages (4.14.0)\n","Requirement already satisfied: oauthlib<4,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from tweepy) (3.2.2)\n","Requirement already satisfied: requests<3,>=2.27.0 in /usr/local/lib/python3.10/dist-packages (from tweepy) (2.27.1)\n","Requirement already satisfied: requests-oauthlib<2,>=1.2.0 in /usr/local/lib/python3.10/dist-packages (from tweepy) (1.3.1)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27.0->tweepy) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27.0->tweepy) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27.0->tweepy) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.27.0->tweepy) (3.4)\n"]}]},{"cell_type":"code","source":["import tweepy\n","from tweepy import OAuthHandler\n","import configparser\n","import pandas as pd\n","\n","# read configs\n","config = configparser.ConfigParser()\n","config.read('/content/drive/MyDrive/HATE_SPEECH_DETECTION_PROJECT/config.ini')\n","\n","api_key = config['twitter']['api_key']\n","api_key_secret = config['twitter']['api_key_secret']\n","\n","access_token = config['twitter']['access_token']\n","access_token_secret = config['twitter']['access_token_secret']\n","\n","#authentication\n","auth = tweepy.OAuthHandler(api_key, api_key_secret)\n","auth.set_access_token(access_token, access_token_secret)\n","api = tweepy.API(auth)"],"metadata":{"id":"krSLg0ObYaHQ","executionInfo":{"status":"ok","timestamp":1684933310436,"user_tz":-330,"elapsed":762,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}}},"execution_count":39,"outputs":[]},{"cell_type":"markdown","source":["CODE TO SCRAPE TWEETS BASED ON HASHTAGS"],"metadata":{"id":"td3cs7qgYtjp"}},{"cell_type":"code","source":["# Define the hashtags\n","hashtags = ['#BorisJohnson']\n","\n","columns = ['tweets']\n","data = []\n","\n","# Scrape tweets for each hashtag\n","for hashtag in hashtags:\n","    public_tweets = tweepy.Cursor(api.search_tweets, q=hashtag, tweet_mode='extended').items(1000)\n","    for tweet in public_tweets:\n","        data.append([tweet.full_text])\n","\n","# Create DataFrame from the tweet data\n","df_hashtags = pd.DataFrame(data, columns=columns)"],"metadata":{"id":"OGTo9TMk86H3","executionInfo":{"status":"ok","timestamp":1684933343641,"user_tz":-330,"elapsed":22287,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df_hashtags"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"ZKU7ZCiJAC3P","executionInfo":{"status":"ok","timestamp":1684933350211,"user_tz":-330,"elapsed":533,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}},"outputId":"c26e9626-406a-40a3-fd30-7de0d96cadcd"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                tweets\n","0    RT @TheLynch10: This grifting bastard can pay ...\n","1    RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...\n","2    RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...\n","3    RT @johnnyd_ee: All these idiots claiming that...\n","4    RT @johnnyd_ee: All these idiots claiming that...\n","..                                                 ...\n","995  RT @911Amelia: #SueGray investigation, report,...\n","996  RT @MissLauraMarcus: How many allies does #Bor...\n","997  Spectacular own goal from #BorisJohnson as reg...\n","998  RT @911Amelia: Let be clear, PM Sunak has refe...\n","999  RT @BLAIMGame: Anyone who think that the new c...\n","\n","[1000 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-80a75cd7-f3b4-4879-9e2b-18d69149974b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tweets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>RT @TheLynch10: This grifting bastard can pay ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>RT @johnnyd_ee: All these idiots claiming that...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>RT @johnnyd_ee: All these idiots claiming that...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>RT @911Amelia: #SueGray investigation, report,...</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>RT @MissLauraMarcus: How many allies does #Bor...</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>Spectacular own goal from #BorisJohnson as reg...</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>RT @911Amelia: Let be clear, PM Sunak has refe...</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>RT @BLAIMGame: Anyone who think that the new c...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-80a75cd7-f3b4-4879-9e2b-18d69149974b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-80a75cd7-f3b4-4879-9e2b-18d69149974b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-80a75cd7-f3b4-4879-9e2b-18d69149974b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["CODE TO SCRAPE TWEETS BASED ON USER HANDLE"],"metadata":{"id":"UfDTvW-aY2vZ"}},{"cell_type":"code","source":["# Define the user handle\n","user_handle = '@Cobarrtate'  # Replace 'username' with the desired user handle\n","\n","columns = ['tweets']\n","data = []\n","\n","# Scrape tweets from the user handle\n","public_tweets = tweepy.Cursor(api.user_timeline, screen_name=user_handle, tweet_mode='extended').items(1000)\n","for tweet in public_tweets:\n","    data.append([tweet.full_text])\n","\n","# Create DataFrame from the tweet data\n","df_user = pd.DataFrame(data, columns=columns)"],"metadata":{"id":"4oOIP44EDLyv","executionInfo":{"status":"ok","timestamp":1684933368204,"user_tz":-330,"elapsed":14129,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}}},"execution_count":42,"outputs":[]},{"cell_type":"code","source":["df_user"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"13dJWaDFDSrv","executionInfo":{"status":"ok","timestamp":1684933376683,"user_tz":-330,"elapsed":7,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}},"outputId":"200b210e-c8e0-4c4f-aba2-e88431e7d7b9"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                tweets\n","0    RT @Cobarrtate: OK ITS TIME I WILL ENDORSE A S...\n","1    RT @Cobratate: OK FUCK IT I WILL ENDORSE A SHI...\n","2    RT @Cobratate: So Harry and Megan ALMOST crash...\n","3    RT @DiscoverTRW: Dan quit his 9-5 and earned $...\n","4              RT @tatepledge: https://t.co/qyqywEMj4R\n","..                                                 ...\n","995                          😂 https://t.co/v6OhRZRoq8\n","996  Mark really has fun at home 😂 https://t.co/Ssb...\n","997  RT @ONPOINT_MP: TUANZY HIGHLIGHT!\\nfrom joey's...\n","998              祝福全天下的父親..... https://t.co/b7NRE5AgmV\n","999  Today became a very different special day...😊 ...\n","\n","[1000 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-c2aba6ad-28ae-4f06-bc8e-ba39d8c6cec3\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tweets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>RT @Cobarrtate: OK ITS TIME I WILL ENDORSE A S...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RT @Cobratate: OK FUCK IT I WILL ENDORSE A SHI...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RT @Cobratate: So Harry and Megan ALMOST crash...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>RT @DiscoverTRW: Dan quit his 9-5 and earned $...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>RT @tatepledge: https://t.co/qyqywEMj4R</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>😂 https://t.co/v6OhRZRoq8</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>Mark really has fun at home 😂 https://t.co/Ssb...</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>RT @ONPOINT_MP: TUANZY HIGHLIGHT!\\nfrom joey's...</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>祝福全天下的父親..... https://t.co/b7NRE5AgmV</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>Today became a very different special day...😊 ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2aba6ad-28ae-4f06-bc8e-ba39d8c6cec3')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c2aba6ad-28ae-4f06-bc8e-ba39d8c6cec3 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c2aba6ad-28ae-4f06-bc8e-ba39d8c6cec3');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["CODE TO SCRAPE REPLY OF TWEETS BASED ON URL OF TWEET"],"metadata":{"id":"hHdVvJ-VZBTI"}},{"cell_type":"code","source":["# Define the URL of the tweet\n","tweet_url = 'https://twitter.com/OliLondonTV/status/1660799902908137474'\n","\n","# Extract the tweet ID from the URL\n","tweet_id = tweet_url.split('/')[-1]\n","\n","# Fetch the tweet and its replies\n","tweet = api.get_status(tweet_id, tweet_mode='extended')\n","replies = tweepy.Cursor(api.search_tweets, q='to:' + tweet.user.screen_name, since_id=tweet_id, tweet_mode='extended').items(100)\n","\n","# Create a DataFrame to store the reply data\n","columns = ['reply_id', 'reply_text']\n","data = []\n","for reply in replies:\n","    if hasattr(reply, 'in_reply_to_status_id_str') and reply.in_reply_to_status_id_str == tweet_id:\n","        data.append([reply.id_str, reply.full_text])\n","\n","df_replies = pd.DataFrame(data, columns=columns)"],"metadata":{"id":"BNuy14-9FVbO","executionInfo":{"status":"ok","timestamp":1684933389355,"user_tz":-330,"elapsed":2364,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["df_replies"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49},"id":"802KkpIJHTTP","executionInfo":{"status":"ok","timestamp":1684933392068,"user_tz":-330,"elapsed":7,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}},"outputId":"25aa36a3-b6b6-4397-b180-a44107c67f83"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [reply_id, reply_text]\n","Index: []"],"text/html":["\n","  <div id=\"df-3485227c-c01f-4a1b-b1b3-89d266d6d32b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>reply_id</th>\n","      <th>reply_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3485227c-c01f-4a1b-b1b3-89d266d6d32b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3485227c-c01f-4a1b-b1b3-89d266d6d32b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3485227c-c01f-4a1b-b1b3-89d266d6d32b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":45}]},{"cell_type":"markdown","source":["Compilation of scraped data"],"metadata":{"id":"TC36g8STtSbV"}},{"cell_type":"code","source":["concatenated_df = pd.concat([df_hashtags, df_user], ignore_index=True)"],"metadata":{"id":"LfcPlKtstV6z","executionInfo":{"status":"ok","timestamp":1684933428688,"user_tz":-330,"elapsed":1259,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["concatenated_df"],"metadata":{"id":"W9TvxZHDIaFm","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1684933430678,"user_tz":-330,"elapsed":6,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}},"outputId":"bd4af3cc-517d-4c5d-8142-3972c25a20d4"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 tweets\n","0     RT @TheLynch10: This grifting bastard can pay ...\n","1     RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...\n","2     RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...\n","3     RT @johnnyd_ee: All these idiots claiming that...\n","4     RT @johnnyd_ee: All these idiots claiming that...\n","...                                                 ...\n","1995                          😂 https://t.co/v6OhRZRoq8\n","1996  Mark really has fun at home 😂 https://t.co/Ssb...\n","1997  RT @ONPOINT_MP: TUANZY HIGHLIGHT!\\nfrom joey's...\n","1998              祝福全天下的父親..... https://t.co/b7NRE5AgmV\n","1999  Today became a very different special day...😊 ...\n","\n","[2000 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-9cbede36-64cd-4fd5-9fbc-0d6bd6f96f9f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tweets</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>RT @TheLynch10: This grifting bastard can pay ...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RT @smayusufbaran: KAMPANYAMIZ SİZLERİN DESTEK...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>RT @johnnyd_ee: All these idiots claiming that...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>RT @johnnyd_ee: All these idiots claiming that...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1995</th>\n","      <td>😂 https://t.co/v6OhRZRoq8</td>\n","    </tr>\n","    <tr>\n","      <th>1996</th>\n","      <td>Mark really has fun at home 😂 https://t.co/Ssb...</td>\n","    </tr>\n","    <tr>\n","      <th>1997</th>\n","      <td>RT @ONPOINT_MP: TUANZY HIGHLIGHT!\\nfrom joey's...</td>\n","    </tr>\n","    <tr>\n","      <th>1998</th>\n","      <td>祝福全天下的父親..... https://t.co/b7NRE5AgmV</td>\n","    </tr>\n","    <tr>\n","      <th>1999</th>\n","      <td>Today became a very different special day...😊 ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2000 rows × 1 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9cbede36-64cd-4fd5-9fbc-0d6bd6f96f9f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9cbede36-64cd-4fd5-9fbc-0d6bd6f96f9f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9cbede36-64cd-4fd5-9fbc-0d6bd6f96f9f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["concatenated_df.to_csv('/content/drive/MyDrive/HATE_SPEECH_DETECTION_PROJECT/DATASET/unlabelled_data_tweets.csv')"],"metadata":{"id":"Qmb-14GoJSQS","executionInfo":{"status":"ok","timestamp":1684933516154,"user_tz":-330,"elapsed":764,"user":{"displayName":"Subhadeep Banerjee","userId":"07235538164090480541"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["d.tail()"],"metadata":{"id":"xWdSCh0XKMjR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"en14u9eoWiDP"},"execution_count":null,"outputs":[]}]}